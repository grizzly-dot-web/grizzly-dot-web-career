$DetailsWidth: 100 - $HistoryMainWidth + $HistoryDetailsOverlap;
$DetailsHeight: $HistoryMain_MinHeight - 20vh;
        
$LeftPosition_From: $HistoryMainWidth - $HistoryDetailsOverlap;
$LeftPosition_To: getGridSize(2, horizontal);


.history-entry {
    &:not(:last-child) {
        .history-details {
            opacity: 1;
        
            width: 100%;
            height: 100%;
            transition: opacity 0.5s 0.5s ease-in-out;
        
            top: 0;
            left: 0;
            position: absolute;
            &:not(.is-active) .history-details-content {
                left: $LeftPosition_From !important;
            }
            &.is-active .history-details-content {
                left: $LeftPosition_To !important;
        
                .close {
                    opacity: 1;
                }
            }
        
            .history-details-content {
                z-index: 4;
                color: $ColorBackgroundDark;
                background-color: $ColorBackgroundContent;
                
                height: $DetailsHeight;
                width: calc(100vw - #{$LeftPosition_To});
                position: relative;
                padding: 4em 0 2em;
                
                top: 50%;
                position: absolute;
                transform: translate3d(0, -50%, 0);
        
                transition: left 0.2s ease-out;
        
                .close {
                    @include CloseButton();
        
                    z-index: 2;
                    top: 1em;
                    left: 1em;
                    opacity: 0;
                    position: absolute;
                    transition: opacity 0.3s ease-in-out;
                }
            }
        }

        .textarea {
            height: 100%;
            overflow: auto;
	    	max-width: 1000px;
            margin-right: $LeftPosition_To; 

            header {
                h3,
                h4 {
                    display: inline-block;
                }

                h4 {
                    color: $ColorPrimary;

                    &:before {
                        content: ' | ';
                        white-space: pre;
                    }
                }
            }
        }
    }
}